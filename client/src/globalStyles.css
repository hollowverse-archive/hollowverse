/* 
  Contents
    1- Normalize/Base Global Styles (will stay but change)
    2- Old compiled output of SASS until the styles are replaced with JS (to be removed)
*/

/* Normalize via minireset.css v0.0.3 | MIT License | github.com/jgthms/minireset.css */

html,
body,
p,
ol,
ul,
li,
dl,
dt,
dd,
blockquote,
figure,
fieldset,
legend,
textarea,
pre,
iframe,
hr,
h1,
h2,
h3,
h4,
h5,
h6 {
  margin: 0;
  padding: 0;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: 100%;
  font-weight: normal;
}

ul {
  list-style: none;
}

button,
input,
select,
textarea {
  margin: 0;
}

html {
  box-sizing: border-box;
}

*, *:before, *:after {
  box-sizing: inherit;
}

img,
embed,
iframe,
object,
audio,
video {
  height: auto;
  max-width: 100%;
}

iframe {
  border: 0;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

td,
th {
  padding: 0;
  text-align: left;
}

/* Hollowverse Globals & Old Styles */

@keyframes spinAround {
  from {
    transform: rotate(0deg); }
  to {
    transform: rotate(359deg); } }


body, #app, .mainApp {
  display: flex;
  min-height: 100vh;
  flex-direction: column; }

.overflowHidden {
  overflow: hidden; }

.padding8, .nav {
  padding: 8px; }

.elementSpacingTop, .pageHomepage .hero, .pageSearch .hero {
  margin-top: 40px; }

.elementSpacingTopHalf {
  margin-top: 20px; }

.elementPaddingSides {
  padding-left: 20px;
  padding-right: 20px; }

.removePadding {
  padding: 0; }

.fontAwesomeBackgroundImageWrapper {
  position: relative; }
  .fontAwesomeBackgroundImageWrapper:after {
    font-family: FontAwesome;
    right: -5%;
    position: absolute;
    top: 0;
    font-size: 30rem;
    line-height: 15rem;
    color: #eeeded;
    z-index: 1; }

.fontAwesomeBackgroundImageInner {
  position: relative;
  z-index: 2; }

.hv-has-shadow {
  box-shadow: 0 2px 3px rgba(10, 10, 10, 0.1); }

.mainApp .facebookIcon {
  padding-left: 5px;
  margin-bottom: -2px;
  color: #3B5998; }

.nav {
  background-color: #00d1b2; }
  .nav .title a,
  .nav .is-hidden-mobile .nav-item {
    color: white; }
  .nav .nav-toggle span {
    background-color: white; }
  .nav .nav-toggle:hover {
    background-color: transparent; }

.pageHomepage .searchButtonContainer {
  margin-top: 20px;
  text-align: center; }
  .pageHomepage .searchButtonContainer a {
    width: 170px;
    color: white; }

.pageHomepage .input {
  font-size: 1.3rem; }

.pageHomepage .fontAwesomeBackgroundImageWrapper:after {
  content: '\F002';
  font-size: 25rem;
  line-height: 12rem;
  right: 5%; }

.pageHomepage .searchForm {
  position: relative; }
  .pageHomepage .searchForm .text-center {
    text-align: center;
    position: absolute;
    bottom: 100%;
    margin-bottom: 1rem;
    left: 0;
    right: 0; }
  .pageHomepage .searchForm .notification {
    display: inline-block; }

.pageSearch .fontAwesomeBackgroundImageWrapper:after {
  content: "\F128"; }

.pageSearch .createAProfileButtonContainer a {
  color: white; }

.componentGlobalSpinner .modal-background {
  background-color: rgba(255, 255, 255, 0.7); }

.componentGlobalSpinner .modal-content {
  margin: 0 20px 30vh 20px; }

.componentGlobalSpinner .spinner {
  margin: 0 auto 0 auto;
  width: 200px;
  text-align: center; }

.componentGlobalSpinner .spinner > div {
  width: 25px;
  height: 25px;
  background-color: #00d1b2;
  margin-left: 10px;
  border-radius: 100%;
  display: inline-block;
  -webkit-animation: sk-bouncedelay 1.4s infinite ease-in-out both;
  animation: sk-bouncedelay 1.4s infinite ease-in-out both; }

.componentGlobalSpinner .spinner .bounce1 {
  -webkit-animation-delay: -0.32s;
  animation-delay: -0.32s; }

.componentGlobalSpinner .spinner .bounce2 {
  -webkit-animation-delay: -0.16s;
  animation-delay: -0.16s; }

@-webkit-keyframes sk-bouncedelay {
  0%, 80%, 100% {
    -webkit-transform: scale(0); }
  40% {
    -webkit-transform: scale(1); } }

@keyframes sk-bouncedelay {
  0%, 80%, 100% {
    -webkit-transform: scale(0);
    transform: scale(0); }
  40% {
    -webkit-transform: scale(1);
    transform: scale(1); } }

.fadeInDown-enter {
  opacity: 0;
  animation: fadeInDown 100ms ease-in both; }

.fadeInDown-leave {
  opacity: 1;
  animation: fadeOutUp 100ms ease-in both; }

.fadeInDown-enter.fadeInDown-enter-active {
  opacity: 1; }

.fadeInDown-leave.fadeInDown-leave-active {
  opacity: 0; }

.fadeInUp-enter {
  opacity: 0;
  animation: fadeInUp 100ms ease-in both; }

.fadeInUp-leave {
  opacity: 1;
  animation: fadeOutDown 100ms ease-in both; }

.fadeInUp-enter.fadeInUp-enter-active {
  opacity: 1; }

.fadeInUp-leave.fadeInUp-leave-active {
  opacity: 0; }

.fadeIn-100-enter {
  opacity: 0; }

.fadeIn-100-leave {
  opacity: 1; }

.fadeIn-100-enter.fadeIn-100-enter-active {
  opacity: 1;
  transition: opacity 100ms ease-in; }

.fadeIn-100-leave.fadeIn-100-leave-active {
  opacity: 0;
  transition: opacity 100ms ease-in; }

.fadeIn-200-enter {
  opacity: 0; }

.fadeIn-200-leave {
  opacity: 1; }

.fadeIn-200-enter.fadeIn-200-enter-active {
  opacity: 1;
  transition: opacity 200ms ease-in; }

.fadeIn-200-leave.fadeIn-200-leave-active {
  opacity: 0;
  transition: opacity 200ms ease-in; }

.fadeIn-300-enter {
  opacity: 0; }

.fadeIn-300-leave {
  opacity: 1; }

.fadeIn-300-enter.fadeIn-300-enter-active {
  opacity: 1;
  transition: opacity 300ms ease-in; }

.fadeIn-300-leave.fadeIn-300-leave-active {
  opacity: 0;
  transition: opacity 300ms ease-in; }

.fadeIn-400-enter {
  opacity: 0; }

.fadeIn-400-leave {
  opacity: 1; }

.fadeIn-400-enter.fadeIn-400-enter-active {
  opacity: 1;
  transition: opacity 400ms ease-in; }

.fadeIn-400-leave.fadeIn-400-leave-active {
  opacity: 0;
  transition: opacity 400ms ease-in; }

@keyframes fadeInDown {
  from {
    opacity: 0;
    transform: translate3d(0, -20%, 0); }
  to {
    opacity: 1;
    transform: translate3d(0, 0, 0); } }

@keyframes fadeOutUp {
  from {
    opacity: 1;
    transform: translate3d(0, 0, 0); }
  to {
    opacity: 0;
    transform: translate3d(0, -20%, 0); } }

@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translate3d(0, 20%, 0); }
  to {
    opacity: 1;
    transform: translate3d(0, 0, 0); } }

@keyframes fadeOutDown {
  from {
    opacity: 1;
    transform: translate3d(0, 0, 0); }
  to {
    opacity: 0;
    transform: translate3d(0, 20%, 0); } }
